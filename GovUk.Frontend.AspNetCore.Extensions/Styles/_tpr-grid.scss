@import '_variables.scss';
@import 'govuk/base';

/* 
    Modifier for .govuk-grid-row which adds a decorative divider after the row with padding above and margin below. 
    Use ::after so we can align the divider with content but don't need to mess with the margin & padding of 
    .govuk-grid-row, which disrupts GOV.UK grid layout.
*/
@mixin tpr-divider {
    @include govuk-responsive-padding(6, "bottom");
    border-bottom: 1px solid $tpr-colour-very-light-grey;
    @include govuk-responsive-margin(6, "bottom");
}

.govuk-grid-row--tpr-divider::after {
    @include tpr-divider;
    margin-left: $govuk-gutter-half;
    margin-right: $govuk-gutter-half;
}

/* Add a background box to highlight a section of content.
*/
.govuk-grid-row--tpr-box {
    padding-left: $govuk-gutter-half;
    padding-right: $govuk-gutter-half;
}

.govuk-grid-row--tpr-box > .govuk-grid-column {
    padding: $govuk-gutter;
    background: $tpr-colour-whisper;
    @include govuk-responsive-margin(6, "bottom");
}

/* .govuk-grid-row--tpr-box can be combined with .govuk-grid-row--tpr-divider. 
    In that case the padding applied for .govuk-grid-row--tpr-box creates space equivalent to the margins 
    applied for .govuk-grid-row--tpr-divider, so remove the margins.
*/
.govuk-grid-row--tpr-divider.govuk-grid-row--tpr-box::after {
    margin-left: 0;
    margin-right: 0;
}

.govuk-grid-row--tpr-divider.govuk-grid-row--tpr-box > .govuk-grid-column {
    margin-bottom: 0;
}


/* .govuk-grid-row--tpr-divider and .govuk-grid-column--tpr-box both apply padding-bottom, so remove any bottom padding or 
    margin from the last element inside either one so that we get one spacer, not the combination of both.
*/
.govuk-grid-row--tpr-divider > .govuk-grid-column > :last-child,
.govuk-grid-row--tpr-divider > .govuk-grid-column > .govuk-grid-row:last-child > .govuk-grid-column > :last-child,
.govuk-grid-row--tpr-box > .govuk-grid-column > :last-child,
.govuk-grid-row--tpr-box > .govuk-grid-column > .govuk-grid-row:last-child > .govuk-grid-column > :last-child {
    padding-bottom: 0;
    margin-bottom: 0;
}


/* There is a special case where the legend is the page heading (see https://design-system.service.gov.uk/components/fieldset/).
   In this case .govuk-grid-row--tpr-divider will not work because the HTML structure is different. 
   .govuk-grid-row--tpr-divider-for-fieldset must be applied to the .govuk-grid-row instead.

   1. First this overrides the column width chosen for the .govuk-grid-row. It must be 100% for the divider to span the page.

   2. The column width is applied instead to elements within the fieldset, including the h1 inside the legend. 

      Very specific selectors are used so that nested fieldsets are not matched. The first two selectors target the fieldset
      component of the GOV.UK Design System. The second two target radio and checkbox groups. The .govuk-fieldset__child target 
      child components of radio and checkbox groups, eg the hint and error message for the group. All are repeated in *-from-desktop versions.

      Components placed inside the fieldset should typically have .govuk-grid-column-full applied, since the desired width comes from their container element.

   3. Finally, the divider is applied to the legend element, which is set to 100% wide so that the divider spans the page.
*/
.govuk-grid-row--tpr-divider-for-fieldset > .govuk-grid-column {
    width: 100%;
}

@each $width in map-keys($govuk-grid-widths) {
    .govuk-grid-row--tpr-divider-for-fieldset > .govuk-grid-column-#{$width} > fieldset > *,
    .govuk-grid-row--tpr-divider-for-fieldset > .govuk-grid-column-#{$width} > fieldset > legend > h1,
    .govuk-grid-row--tpr-divider-for-fieldset > .govuk-grid-column-#{$width} > .govuk-form-group > fieldset > *,
    .govuk-grid-row--tpr-divider-for-fieldset > .govuk-grid-column-#{$width} > .govuk-form-group > fieldset > legend > h1 {
        width: govuk-grid-width($width);
    }

    .govuk-grid-row--tpr-divider-for-fieldset > .govuk-grid-column > .govuk-form-group > fieldset > .govuk-fieldset__child--#{$width} {
        width: govuk-grid-width($width);
    }

    @include govuk-media-query($from: desktop) {
        .govuk-grid-row--tpr-divider-for-fieldset > .govuk-grid-column-#{$width}-from-desktop > fieldset > *,
        .govuk-grid-row--tpr-divider-for-fieldset > .govuk-grid-column-#{$width}-from-desktop > fieldset > legend > h1,
        .govuk-grid-row--tpr-divider-for-fieldset > .govuk-grid-column-#{$width}-from-desktop > .govuk-form-group > fieldset > *,
        .govuk-grid-row--tpr-divider-for-fieldset > .govuk-grid-column-#{$width}-from-desktop > .govuk-form-group > fieldset > legend > h1 {
            width: govuk-grid-width($width);
        }

        .govuk-grid-row--tpr-divider-for-fieldset > .govuk-grid-column > .govuk-form-group > fieldset > .govuk-fieldset__child--#{$width}-from-desktop {
            width: govuk-grid-width($width);
        }
    }
}

.govuk-grid-row--tpr-divider-for-fieldset > .govuk-grid-column > fieldset > legend,
.govuk-grid-row--tpr-divider-for-fieldset > .govuk-grid-column > .govuk-form-group > fieldset > legend {
    width: 100%;
    @include tpr-divider;
}

/*
    Columns with alternating white and grey backgrounds.
    Columns should have a *-from-desktop grid width applied, eg govuk-grid-column-one-third-from-desktop for a three column layout.
    Switch to flexbox for desktop layouts so that, when columns are active, column backgrounds extend the full height of the column.
*/

.govuk-grid-row--tpr-columns > .govuk-grid-column > .govuk-grid-row > .govuk-grid-column {
    @include govuk-responsive-padding(4, "top"); // space above and below text in the column is required on a non-white background
    @include govuk-responsive-padding(4, "bottom");
    @include govuk-responsive-margin(2, "bottom"); // vertical space between columns when stacked
}

@include govuk-media-query($from: desktop) {
    .govuk-grid-row--tpr-columns > .govuk-grid-column > .govuk-grid-row {
        display: flex;
    }

    .govuk-grid-row--tpr-columns > .govuk-grid-column > .govuk-grid-row > .govuk-grid-column {
        @include govuk-responsive-margin(0, "bottom"); // vertical space no longer needed when not stacked
    }
}

.govuk-grid-row--tpr-columns > .govuk-grid-column > .govuk-grid-row > .govuk-grid-column:nth-child(even) {
    background: $tpr-colour-white-smoke;
}

/* 
    Keep the set of columns away from the browser edge - particularly relevant in error state where you want to see the error border.
*/
.govuk-grid-row--tpr-columns > .govuk-grid-column {
    margin-left:0;
}

/* 
    If a .govuk-grid-row is put into an error state that means red borders should extend to all its children.
*/
.govuk-grid-row.govuk-form-group--error {
    margin-left: 0;

    & > .govuk-grid-column {
        padding-left: 0;
    }

    & .govuk-input, & .govuk-select {
        border-color: $govuk-error-colour;

        &:focus {
            border-color: $govuk-input-border-colour;
        }
    }
}